{"name":"PhoAuth","body":"PhoAuth\r\n=======\r\n\r\n[![Build Status](https://secure.travis-ci.org/icheishvili/phoauth.png?branch=master)](http://travis-ci.org/icheishvili/phoauth)\r\n\r\nOAuth sucks. The goal of this library is to make it stop sucking. It's\r\nfor PHP 5.3+. It is licensed under the\r\n[New BSD License](http://www.opensource.org/licenses/bsd-license.php).\r\n\r\nSome libraries...\r\n\r\n  - Force the use of HTTP in a rigidly prescribed way\r\n  - Suppress errors, making debugging impossible\r\n  - Have weird names for parameters\r\n  - Are coupled to a single web server with an arc welder\r\n  - Only work as a client OR a server\r\n  - Are written by people who get paid by # of lines of code\r\n  - Work by funnelling gerbils through pneumatic tubes\r\n\r\nCheck this out:\r\n\r\n```php\r\n<?php\r\nuse PhoAuth\\Utils;\r\n\r\n$signer = new PhoAuth\\Signer(\r\n    Utils::getServerScheme(),\r\n    Utils::getServerMethod(),\r\n    Utils::getServerHost(),\r\n    Utils::getServerPort(),\r\n    Utils::getServerRequestUri(),\r\n    Utils::getServerHeaders(),\r\n    Utils::getServerInputBody());\r\n\r\necho $signer->getSignature();\r\n```\r\n\r\nThe first thing to notice is that all of the HTTP information that\r\nPhoAuth needs is passed in. CS 101 has these concepts about\r\nencapsulation and separation of concerns--this is an example of that.\r\n\r\nThe second thing to notice is how easily Utils lets most people work\r\nwith most PHP set ups. At the same time, due to PhoAuth's design not\r\nsucking, it be used with [Hurricane](http://gethurricane.org/),\r\n[Guzzle](http://guzzlephp.org/), or whatever.\r\n\r\nWhile we're at it, here's how to write a\r\n[server](https://github.com/icheishvili/phoauth/blob/master/examples/index.php)\r\nand a\r\n[client](https://github.com/icheishvili/phoauth/blob/master/examples/client.php).\r\nNotice the use of custom callbacks to control how data flow and\r\nvalidation works. Also notice how nothing is coupled to the client's\r\nactual behavior.\r\n\r\nA few other niceties:\r\n\r\n  - The implementation is clean and easy to read\r\n  - The code is minimal and cohesive, leaving room to build\r\n    use-case-specific abstractions\r\n  - Exceptions are specific and detailed\r\n  - Everything is covered by unit tests\r\n\r\n\r\n\r\nEven Cats Like It!\r\n------------------\r\n![Psyched Cat](https://github.com/icheishvili/phoauth/raw/master/static/psyched-cat.jpg)\r\n\r\nThe feline above has just spotted PhoAuth and is shocked by how awesome it is.","tagline":"OAuth for PHP (that actually works)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}